name: "Build things..."

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  
jobs:
  predeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gather files changed
        uses: trilom/file-changes-action@a6ca26c14274c33b15e6499323aac178af06ad4b
        with:
          fileOutput: " "
          output: " "

      - name: Show files changed
        run: cat $HOME/files.txt

      - name: Show which dirs changed.
        run: awk '{ print $1}' FS=/ $HOME/files.txt

      - name: build and deploy server
        id: predeploy
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: zeus
          IMAGE_TAG: latest
        run: |
          res=$(awk '{ print $1 }' FS=/ $HOME/files.txt | grep server | wc -l)
          if [ $res -eq 1 ]; then 
            cd server && ls 
            docker build -t zeus .
            docker tag zeus $REGISTRY/$REPOSITORY:latest
            docker push $REGISTRY/$REPOSITORY:latest
            run: echo "::set-output name=server::true"
          else
            echo "no deploy this time"
          fi

      - name: build and deploy cli program
        run: |
          res=$(awk '{ print $1 }' FS=/ $HOME/files.txt | grep cli | wc -l)
          if [ $res -eq 1 ]; then 
            cd server && ls 
            run: echo "::set-output name=cli::true"
          else
            echo "no deploy this time"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: samplerolesession
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Deploy to Staging server
        if: steps.predeploy.output.server == true
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "deployments/terraform/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          SCRIPT_BEFORE: | 
            ls -al
          SCRIPT_AFTER: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin {{ secrets.DOCKER_REPOSITORY }}
            docker pull {{ secrets.DOCKER_REPOSITORY }}:latest
            
